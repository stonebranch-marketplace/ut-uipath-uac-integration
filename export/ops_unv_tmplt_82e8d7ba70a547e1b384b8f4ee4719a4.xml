<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2020-07-08 15:23:35" unload_format="1" unload_table="ops_unv_tmplt" unload_version="6.8.0.0"><ops_unv_tmplt action="INSERT_OR_UPDATE"><credentials_var/><agent/><icon_date_created>2019-11-07 15:18:11</icon_date_created><sys_updated_on>2020-06-30 16:22:39</sys_updated_on><output_return_text/><sys_updated_by>Ravi</sys_updated_by><sys_created_on>2019-11-07 14:46:15</sys_created_on><agent_cluster_var/><agent_cluster_var_check>false</agent_cluster_var_check><wait_for_output>false</wait_for_output><sys_created_by>Ravi</sys_created_by><output_return_nline>100</output_return_nline><exit_code_text/><exit_code_fr>0</exit_code_fr><runtime_dir/><output_return_type>1</output_return_type><script>#!/opt/universal/python3.6/bin/python3
# 

###################################################
#
#    Name: UIPATH_JOB_EXEC.py
#
#    Purpose: This program will schedule and trigger RPA jobs in 
#             UiPath RPA Tool.  
#
#    Prerequisites:
#     - Universal Agent for Windows/Linux
#     - Python 2.7.x
#     - Requires the Python modules via pip
#     - pip install requests
#
#     Version History:
#     0.1  Ravi Kumar Murugesan    07-11-2019    Initial Version
#     0.2  Ravi Kumar Murugesan    05-12-2019    Added Access_token variable
#          
####################################################
# Used modules
version = "0.2"

import json
import requests
import argparse
import datetime,time
import logging
import os,sys
#########set authentication parameters###################
access_key=""
content_type="application/json"
########################################################

# -- logging settings DEBUG, INFO, WARNING, ERROR, CRITICAL

logging.basicConfig(level=logging.INFO, format=' %(asctime)s - %(levelname)s - %(message)s')


# Sample CLI Command to test in Command Shell or dos Box
# python UIPATH_JOB_EXEC.py --process_name run_textpad_update --acct_logical_name "raviktcgvpgw" --srv_ins_name "RaviKumarDemo5i196273" --orch_url "https://platform.uipath.com"

def main():
######set the varibles for Universal Task #####################################
    set_variables()
    access_key="Bearer "+args.Uipath_access_token
    content_type="application/json"
######Process to get the RPA Key for the given RPA Task #######################
    key_process_name=search_rpa_jobid()
    print("In Main Function",key_process_name)
######Once you get the key Trigger the RPA Process ############################
    if key_process_name is not None:
        batch_exec_key=start_rpa_job(key_process_name)
        if batch_exec_key is not None:
            print ("inside monitoring")
            logging.info("Monitor function triggered to monitor RPA Job")
#######Monitor the Triggered RPA job in the Orchestrator ######################
            status=monitor_rpa_job(batch_exec_key)
            if status==0:
                sys.exit(0)
            else:
                sys.exit(1)
        else:
            logging.error("Issue in Monitoring RPA Process aborting the Job")
            sys.exit(1)
    else:
        logging.error("Key for the RPA name is invalid")
        sys.exit(1)
############################################End of Main Function #############################################
    
def set_variables():
    global argparse, logging, sys, requests, time, datetime, json
    # -- Set Variables from Universal Task Form or Command Line Input
    ## --&gt; Capture Universal Task Form Variables Here
    parser=argparse.ArgumentParser(description='Purpose : RPA Universal Task')
    parser.add_argument("--process_name", default="${ops_rpa_process_name}")
    parser.add_argument("--acct_logical_name", default="${ops_rpa_acct_logical_name}")
    parser.add_argument("--srv_ins_name", default="${ops_rpa_srv_ins_name}")
    parser.add_argument("--orch_url",default="${ops_rpa_orch_url}")
    parser.add_argument('--Uipath_access_token', default='${Uipath_access_token}')
    ####log level definition
    parser.add_argument("--logginglevel", default="${ops_rpa_logginglevel}")
    global args
    args=parser.parse_args()
    # -- Setup Logging
    numeric_level = getattr(logging, args.logginglevel.upper(), None)
    logging.basicConfig(format='%(asctime)-15s - %(levelname)-8s - %(message)s', level=numeric_level)
    # -- Print Paramater Values
    logging.debug("Executing version {0} with the following parameters : {1}".format(version, args))
    # -- Ignore Https Warnings
    import urllib3
    urllib3.disable_warnings()
    # -- Setup LogDate for Trigger Log Search
    global log_date
    log_date = json.dumps(datetime.datetime.now().isoformat())
    logging.info("Initialised completed to Trigger RPA Process")
    # -- Global Parms
# --
    #print(args.process_name)
    #print(args.acct_logical_name)
def search_rpa_jobid():
    logging.info("Attempting to check release key of the RPA Process Name")
    access_key="Bearer "+args.Uipath_access_token
    content_type="application/json"
    #print ("access_key:",access_key)
    header={'Authorization':access_key,
            'X-UIPATH-TenantName':args.srv_ins_name,
            'content-type':content_type 
           }
    url=args.orch_url+"/"+args.acct_logical_name+"/"+args.srv_ins_name+"/odata/Releases?$filter=%20ProcessKey%20eq%20'"+args.process_name+"'"
    #print(url)
    try:
        response=requests.get(url,headers=header)
        format_response=response.json()
        if response.status_code == 200:
            logging.info("Response:" + response.text)
            for item in format_response['value']:
                key=item['Key']
            #print("Process_Key for",args.process_name,"is",key)
            logging.info("Process_Key for "+args.process_name+"is "+key)
            return(key)
        else:
            sys.exit(1)
    except:  # catch all exceptions
        logging.error("Error in retrieving the Key for RPA Process - Check Authentication/ProcessName")
        sys.exit(1)

def start_rpa_job(key_for_RPA_job):
    #print("rpa_start_job:",key_for_RPA_job)
    logging.info("Attempting to start RPA Job")
    url=args.orch_url+"/"+args.acct_logical_name+"/"+args.srv_ins_name+"/odata/Jobs/UiPath.Server.Configuration.OData.StartJobs"
    #print("start job url:",url)
    access_key="Bearer "+args.Uipath_access_token
    content_type="application/json"
    header={'Authorization':access_key,
        'X-UIPATH-TenantName': args.srv_ins_name,
        'content-type':content_type 
       }
    req_body={
     "startInfo": {
     "ReleaseKey": key_for_RPA_job,
     "Strategy": "All",
     "RobotIds": [],
     "NoOfRobots": 0
                  }
        }
    response=requests.post(url,data=json.dumps(req_body),headers=header)
    #print("response code for post request :",response.status_code)
    format_response=response.json()
    if response.status_code == 201:
        #print (format_response)
        logging.info(format_response)
        for item in format_response['value']:
        #   print (item['State'])
            status=item['State']
            batch_exec_key=item['BatchExecutionKey']
        #print("status of the RPA Job:",status)
        #print("Batch execution Key  :",batch_exec_key)
        logging.info("RPA Job :"+args.process_name+" triggered successfully") 
        logging.info("Execution key in UIPATH:"+ batch_exec_key)
        return(batch_exec_key)
    else:
        logging.error("Error in triggering RPA Job:"+ args.process_name + "  status code for the request:" + str(response.status_code))
        sys.exit(1)
#################Monitor the RPA Job #########################################################
def monitor_rpa_job(batch_key):
    status_flag=False
    logging.info("Inside the RPA Job Monitor Function")
    monitor_url=args.orch_url+"/"+args.acct_logical_name+"/"+args.srv_ins_name+"/odata/Jobs?$filter=BatchExecutionKey%20eq%20"+batch_key
    #### Define the Header the Request
    access_key="Bearer "+args.Uipath_access_token
    content_type="application/json"
    header={'Authorization':access_key,
        'X-UIPATH-TenantName': args.srv_ins_name,
        'content-type':content_type 
    }
    while True:
        ######Query UIPATH to check the RPA job status ##########################
        job_exec_response=requests.get(monitor_url,headers=header)
      # print ("Query status with RPA :", job_exec_response.status_code)
        if job_exec_response.status_code == 200:
            format_exec_stat_res=job_exec_response.json()
            # print ("inquiry data of the RPA Job:",format_exec_stat_res)
            for job_state in format_exec_stat_res['value']:
                status=job_state['State']
            if (status == "Successful" or status == "Faulted" or status == "Stopped"):
                rpa_start_time=job_state['StartTime']
                rpa_end_time=job_state['EndTime']
                rpa_jobinfo=job_state['Info']
                rpa_ReleaseName=job_state['ReleaseName']
                #print ("RPA Process:",rpa_ReleaseName,"Completed with status:",status)
                #print ("Start Time:",rpa_end_time,"     ","End Time:",rpa_end_time)
                #print ("Job Completion info:",rpa_jobinfo)
                logging.info("RPA Process: "+args.process_name+" completed with "+status)
                logging.info("Start Time: "+rpa_start_time+"        "+" End Time: "+rpa_end_time)
                logging.info("RPA Job Completion info: "+rpa_jobinfo)
                if (status == "Successful"):
                    return(0)
                else:
                    return(1)
                break
            else:
                #print ("Triggered RPA Process is in status:",status)
                
                if status == "Running" :
                    if not status_flag:
                        logging.info("RPA Process: "+args.process_name+" is in status "+status)
                        status_flag=True
                time.sleep(10)    
        else:
            #print("Query hitting uipath for Job status Failed with status code",job_exec_response.status_code)
            logging.error("Error in RPA Process Monitoring: "+rpa_jobinfo)
            return(1)

# -- Execute
main()
</script><broadcast_cluster_var_check>false</broadcast_cluster_var_check><agent_type>1</agent_type><script_type_windows>uapy</script_type_windows><automatic_output_fr>0</automatic_output_fr><agent_cluster/><name>RPA-UiPATH</name><exit_codes>0</exit_codes><broadcast_cluster/><use_common_script>true</use_common_script><credentials/><icon_filesize>1308</icon_filesize><icon>iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAASxSURBVGhD7VlbbFRVFF3n3j5hmDJYigUK9QGBQJT6oEZETVDUiCbEhER+MBo/NOEDEx+JJH75SIx/TUiIidQHH2qiBgg2UYPRQBNiDaUStdRHK7aUQktpO33MPce17xnSIe3U25l2bku6kpNO7t0nd6999t5n711lCMxiOMm/sxZzBMJG2hgwv/0MDPTxxwwKEYf2jpRALbsJKI74j9ISSLz0BEzLL4D2kk9mAPILoNZXw931GtQt6/1H6V1oZBgYHpxZa2TI6mV0UsnrOQYSux+BOXvaulDRPP/IVCTKHTnkTEubS50w7X8DfZeBgkK60D1wn9sLdettvkggAmpJBdwX3yKJdYCbl5TIAbwE9MnvoA/XMh6pyzgEgpnTdYFoDIiVAYuW5G7J95h1kJefVGQswo8BcYChONDfa9M2rT4ZhEuAypvzrdBf7IdX8yq8/W/A/HTMkgmIcAkwvszJb6G/+Qz6RB30D4egv/8KpqMt8P2TEQHzawP00U/g0XL68AGY0/VAvD/5dizMH03Qhz7w5WWZxhPM68zpQqCtBeZih93PTGM6JOP08N1orp8ImRFgmaHrDkJ/+T70kQ+hm+phJiRwxs8kvrwsyvuXElOyii0GCov4W9lgXbDQT9tB03VmBMRSnf8AtJY5z+Pu7Z44+PqvWDmxrqwrlBcXcVyoOx6Ac982qKr7oe59DM6mx6HKljPzTSOBKQOtrm5eB2fbM3B37Ib71AtwqrcCJTfISyvzPwiXgEAyTk8XTGKYJ9sD091p3SsgQidg2s7C+7QGuvYd6I/eha6vgxEXC4jwCfAEzJ9nYJobbely4ZytOAMifBfKEnMEwsYcgbARDoH8Qt5T7DGmAJkRkLpF1lWM39SlQN6PyqjFS0frnyyREQFVWs7+mEWXzGkkj3f9a+uh8Yh4rDjb/7JTBYG0pGwNp0J5QWYEllay3WMVyWLMR/MpmAY2InF2VKmQhoXKm1Msn0nER0nMN0C4BFauhSonCfFlwvD2lL7A+/g9mNZmIMHKlPWMbjwOb99ePvvdlxOo0uVQK1aPks8SmcVAJAq18SGoyjXWkuImLK/1kVokXtmOkV13cVXDe/N5Wv9HEkqWBnl5LJcfBRby9MI8Afm4cyfr+Id3WBLi19JBDQ4A3ReALnZY0mVdvjha1xTNh7P5SThbd044ZZgsMiMgKCjyGxHn6T1w7t7CoC5JsWpK1mGgq8q1cHfugfvs64yd0imzviDYYItB675cA7V6w7XWk60D7La62v2yGC1NMOda7EkUFPupUq2pglq1gTGzAogu4hevtZkMrPTXB4E+9gVC9vZNcDZusW6WGIE+fhT6831sYxuymMylIyCQ7TJslSadWcgMxpPtIhUVheZH6T4ROxwbz/JDcZjeSzZL8bWSsbnsEbcMQCBzF7oKUUoyijTisTLf0jK/V+Ur/ZEk5L5g8KZ1m8JiXmzLoG6ssPJySpMYX2ZPYAxE0dQVFJOVt5gGArlFsPH6vAVwqjbzFmUGEd/OFWS83tFq/1PUw/ScaRDPGExLEIeM6zcG9IG37Tgw4JA1J5B0XLEKzoPbmXZ5MRJpCcwWzMVA2JjlBID/AM+pUyN1+NKDAAAAAElFTkSuQmCC</icon><credential_fr>0</credential_fr><description>Trigger &amp; control RPA Jobs execution using universal controller and also monitor the job till completion</description><environment_variables_fr>0</environment_variables_fr><agent_var/><icon_filename>RPA.PNG</icon_filename><sys_id>82e8d7ba70a547e1b384b8f4ee4719a4</sys_id><variable_prefix>rpa</variable_prefix><system_template>false</system_template><script_windows/><credentials_var_check>false</credentials_var_check><agent_fr>0</agent_fr><agent_var_check>false</agent_var_check><output_failure_only>false</output_failure_only><output_return_sline>1</output_return_sline><output_type>1</output_type><desktop_interact>false</desktop_interact><script_unix/><output_return_file/><run_as_sudo>false</run_as_sudo><broadcast_cluster_var/><environment/><elevate_user>false</elevate_user><exit_code_output/><exit_code_processing>1</exit_code_processing><create_console>false</create_console><related_items_node><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2019-12-12 11:24:05</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>50beef9c805b4b4597f0c9e2daf259af</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2019-12-12 11:24:05</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>82e8d7ba70a547e1b384b8f4ee4719a4</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>50</field_length><form_end_row>false</form_end_row><label>UiPath Account Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>2</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>UIPATH Account Name</hint><field_mapping>textField3</field_mapping><name>acct_logical_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2019-12-12 11:24:05</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>586b37e81be34c178c3999fe8cb5e97a</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2019-12-12 11:24:05</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>82e8d7ba70a547e1b384b8f4ee4719a4</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>32</field_length><form_end_row>false</form_end_row><label>UiPath Service Instance</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>1</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Service instance logical name of the uipath account </hint><field_mapping>textField2</field_mapping><name>srv_ins_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2019-12-12 11:24:05</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>5e48220685d14fbaa2ece96da27a2563</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2019-12-12 11:24:05</sys_created_on><field_value/><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>82e8d7ba70a547e1b384b8f4ee4719a4</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length>50</field_length><form_end_row>false</form_end_row><label>UiPath Process Name</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>0</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>Basically the extract RPA Job Name</hint><field_mapping>textField1</field_mapping><name>process_name</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field><ops_unv_tmplt_field action="INSERT_OR_UPDATE"><choice_sort_option>1</choice_sort_option><form_start_row>false</form_start_row><sys_updated_on>2019-12-12 11:24:05</sys_updated_on><boolean_value_type>1</boolean_value_type><required>true</required><field_mask/><boolean_no_value/><require_if_field/><sys_id>8c4beb3537d04c03b8d35fd038660927</sys_id><require_if_field_value/><array_name_title/><sys_updated_by>ops.admin</sys_updated_by><array_value_title/><sys_created_on>2019-12-12 11:24:05</sys_created_on><field_value>https://platform.uipath.com/</field_value><no_space_if_hidden>false</no_space_if_hidden><require_if_visible>false</require_if_visible><sys_created_by>ops.admin</sys_created_by><int_field_min/><universal_template_id>82e8d7ba70a547e1b384b8f4ee4719a4</universal_template_id><show_if_field/><boolean_yes_value/><form_col_span>1</form_col_span><field_length/><form_end_row>false</form_end_row><label>UiPath ORCHESTRATOR Base URL</label><int_field_max/><choice_allow_empty>false</choice_allow_empty><sequence>3</sequence><show_if_field_value/><form_row_span>1</form_row_span><default_list_view>false</default_list_view><hint>the base URL for API e.g. https://platform.uipath.com/</hint><field_mapping>textField4</field_mapping><name>orch_url</name><field_regex/><field_type>1</field_type></ops_unv_tmplt_field></related_items_node></ops_unv_tmplt></unload>